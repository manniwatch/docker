name: Test
on: [push,pull_request]

jobs:
  test_suite:
    runs-on: ${{ matrix.os }}
    name: Test - ${{ matrix.os }} - Node ${{ matrix.node }}
    timeout-minutes: 30
    strategy:
      max-parallel: 4
      matrix:
        node: [12, 16]
        os: [ubuntu-latest] #, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 200
      - name: Setup Node
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node }}
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Setup Cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node${{ matrix.node }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install Root Dependencies
        run: npm ci
      - name: Test Build
        run: |
          npm run build
          npm run build:docker
      - name: Lint
        run: |
          npm run lint
  test_docker:
    runs-on: ${{ matrix.os }}
    name: Test - ${{ matrix.os }} - Docker Build
    timeout-minutes: 30
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest] #, windows-latest]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.5.0
        with:
          images: manniwatch/manniwatch
          labels: |
            org.opencontainers.image.title=Manniwatch
            org.opencontainers.image.description=Manniwatch Docker Image
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  finish:
    needs: [test_suite,test_docker]
    name: Finish Test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      run: echo "Test Finished"
